echo "hello world!"
echom "tse" " like debug msg view in :messages
set number! # toggle
set number? # check
set numberwidth=0
map <space> viw
map - x
map <c-d> dd
map <c-c> yy:@"<CR>
Сделать выполнение питон команд, функций, по команде
map - ddp
map + ddkP
map <cr> o<Esc>
unmap -
nmap \ dd
vmap \ U
imap <c-d> <esc>ddi
imap <c-u> <esc>viwUi
nmap <c-u> viwU

nmap - dd
nmap \ -
nmap dd O<esc>jddk
 non recurcive mapping
nnoremap \ -

nnoremap -d dd
nnoremap -c ddO
let mapleader = "-"
nnoremap <leader>d aX<esc>

iabbrev adn and
iabbrev waht what
iabbrev tehn then
iabbrev fi if
iabbrev @@ quartenium@gmail.com
inoremap ssig -- <cr>Steve Losh<cr>steve@stevelosh.com

nnoremap jk dd
nnoremap <leader>" viw<esc>a"<esc>bi"<esc>lel
nnoremap <leader>' viw<esc>a'<esc>bi'<esc>lel
vnoremap <leader>" <esc>`<i"<esc>`>a"<esc>lel
nnoremap H 0
nnoremap L $

inoremap jk <esc>
inoremap kj <esc>
Учимся - отключаем старое и оставляем только новое.
inoremap <esc> <nop>
inoremap <left> <nop>

autocmd BufNewFile * :write
autocmd BufNewFile,BufRead *.html setlocal nowrap
autocmd FileType javascript nnoremap <buffer> <localleader>c I//<esc>
autocmd FileType python     nnoremap <buffer> <localleader>c I#<esc>
autocmd FileType python colorscheme sonokai

autocmd FileType python :iabbrev <buffer> iff if:<left>

augroup testgroup
    autocmd!
    autocmd BufWrite * :echom "Writing buffer!"
    autocmd BufWrite * :echom "twice!"
augroup END

nnoremap GG GGzz

return person.get_pets(type="cat", fluffy_only=True)
onoremap p i(
onoremap b /return<cr>

def count(i):
    i += 1
    print i

    return foo

print foo(bar)   ()  (asdf)  a a a a
onoremap in( :<c-u>normal! f(vi(<cr>
onoremap il( :<c-u>normal! F)vi(<cr>

onoremap an( :<c-u>normal! f(vf)<cr>
onoremap al( :<c-u>normal! F(vf)<cr>

Topic One
=========

This is some text about topic one.

It has multiple paragraphs.

Topic Two
=========

This is some text about topic two.  It has only one paragraph.

onoremap ih :<c-u>execute "normal! ?^==\\+$\r:nohlsearch\rkvg_"<cr>
execute "string" - run string as command
normal some - run some as keys in normal mode

onoremap ah :<c-u>execute "normal! ?^==\\+$\r:nohlsearch\rg_vk0"<cr>

Topic 3
-------

onoremap ih :<c-u>execute "normal! ?^--\\+$\r:nohlsearch\rkvg_"<cr>

!Setlocal and autocmd for different statuslines on diff files

let foo = "bar"
echo foo
let foo = 42
echo foo
" echo settings / option
echo &textwidth
echo &foldmethod
echo &wrap
" set option as var
let &wrap = 0
let &number = 0
let &number = 2
" REASON 
let &textwidth += &textwidth + 10

" Local vars"
let &l:number = 0
let &l:number = 1

" Registers "
let @a = "hi"
"ap
echo @a
echo @"
echo @/
" Scope "
let b:hello="world"
echo b:hello

echo "one" | echo "two"

unmap <tab>
unimap <tab>
if 1
    echom "three"
endif

if 1 | echom "three" | endif

if 0
    echom "zero"
endif

if "some" | echom "some" | endif
if "123" | echom "some" | endif

echom "hello" + 10
echom "10hello" + 10
echom "hello10" + 10

if 0
    echom "if"
elseif "nope!"
    echom "elseif"
else
    echom "finally!"
endif

if 10 > 1 | echo "true" | endif
if 10 == 11 | echo "no" | elseif 10 == 10 | echo "ye" | endif
if 0 | echo 1 | else | echo 2 | endif
if "ff" == "bb" | echo "eq" | else | echo "noeq" | endif
set ignorecase
if "ff" == "FF" | echo "eq" | else | echo "noeq" | endif

set noignorecase
if "foo" ==? "FOO" | echo "first" | else | echo "second" | endif
if "foo" ==# "FOO" | echo "first" | else | echo "second" | endif

