http://ksilenomen.pythonanywhere.com/
https://frontender.info/d3js-map-visualization/

https://habr.com/ru/post/186532/
https://github.com/csparpa/pyowm

Нужно отобразить сферу, с картой на ней, с возможностью вращать, приближать.
Пусть мы имеем набор точек в трёхмерном евклидовом пространстве, представляющих сферу и рисунок на ней.
Так же имеется камерa (плоскость проекции) На которую необходимо спроецировать двумерное изображение сферы.
Значит делаем так.
Будем проводить прямые, перпендикулярные плоскости проекции и проходящие через точки сферы - по одной точке
Пересечение таких прямых и плоскости проекции будет давать точку сферы. Необходимо хранить дистанцию до каждой точки.

https://github.com/topojson/topojson
GeoJSON
d3js
http://bl.ocks.org/KoGor/5994804
http://marcneuwirth.com/blog/2012/06/24/creating-the-earth-with-d3-js/
https://d3-wiki.readthedocs.io/zh_CN/master/Geo-Projections/
https://frontender.info/d3js-map-visualization/

https://github.com/SamHasler/sphere/blob/master/sphere.js
https://ru.wikipedia.org/wiki/Three.js
https://github.com/csparpa/pyowm


Как мы знаем, карта представляет из себя контуры, линии, границы государств, береговые линии и много другой геометрии. Для получения этих данных мы будем обращаться к shapefile — популярному формату геоданных. Shapefile позволяет хранить точки, линии, полигоны и другие объекты. Также может содержать информацию о параметрах типа температуры, названий, глубины и т.д. Hа самом деле, shapefile представляет из себя набор из трёх файлов: *.shp, *.shx и *.dbf. Важно, чтобы все три файла находились в одной директории.
https://www.naturalearthdata.com/downloads/
org2org (gdal)
sudo npm install -g topojson

Сначала нам нужно получить из shapefiles конечный TopoJSON-файл. Для этого нам понадобится сгенерировать промежуточный файл GeoJSON. На этапе генерации GeoJSON-файла мы получаем возможность отфильтровать из shapefiles данные, которые нам не нужны, и уменьшить в значениях число знаков после запятой, что важно для увеличения скорости рендеринга, да и просто сокращает размер файла примерно на 85%.
В конечном итоге процесс конвертации данных схематично выглядит так:
shapefiles ⟶ GeoJSON ⟶ TopoJSON
Нам нужно получить TopoJSON со странами мира

https://leafletjs.com/examples/geojson/
https://gist.github.com/kosamari/5bcb6ab8ef292732463b?short_path=f239869
https://bl.ocks.org/mbostock/4408297
https://www.dashingd3js.com/svg-paths-and-d3js

https://www.w3schools.com/howto/howto_js_autocomplete.asp
https://jqueryui.com/autocomplete/
https://on55.ru/articles/2
http://qaru.site/questions/80912/need-a-list-of-all-countries-in-the-world-with-a-longitude-and-latitude-coordinate
https://data.opendatasoft.com/explore/dataset/geonames-all-cities-with-a-population-1000%40public/export/?disjunctive.country
http://download.geonames.org/export/dump/


AIzaSyDQ_agVcB3g5dZaoaFVZM07wkloXNJv3TM
https://maps.googleapis.com/maps/api/geocode/json?address=%D0%A1%D0%BE%D1%87%D0%B8&sensor=false&key=AIzaSyDQ_agVcB3g5dZaoaFVZM07wkloXNJv3TM

    -H "Content-Type: application/json" \
    -H "Accept: application/json" \
    -H "Authorization: Token a21ae8d8246ebf44e4c99a8dd9e6786d3a56ca0a" \
    -d '{ "query": "москва хабар", "count": 10 }' \
    https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address

https://dadata.ru/api/suggest/address/

https://learn.javascript.ru/mousewheel
https://www.jasondavies.com/maps/raster/
https://bl.ocks.org/pnavarrc/5bb1a7c2b4c5b624bb83
https://bl.ocks.org/d3indepth/c62b6ce6625b69f6007cea5fccdd4599
https://bl.ocks.org/mbostock
https://d3-wiki.readthedocs.io/zh_CN/master/Geo-Paths/
https://www.d3indepth.com/geographic/
https://github.com/d3/d3-drag
https://www.html5rocks.com/ru/tutorials/canvas/performance/
https://bl.ocks.org/jparchure/b7e08ab41a963de01e5e473eb14fdee9
https://ru.wikipedia.org/wiki/%D0%93%D0%B5%D0%BE%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5_%D0%BA%D0%BE%D0%BE%D1%80%D0%B4%D0%B8%D0%BD%D0%B0%D1%82%D1%8B

A projection function takes a longitude and latitude co-ordinate (in the form of an array [lon, lat]) and transforms it into an x and y co-ordinate:
https://www.anaga.ru/goroda.htm
http://alextyurin.ru/?p=1037
https://github.com/d3/d3-geo
https://www.d3indepth.com/geographic/
https://leonid.shevtsov.me/post/chto-ty-dolzhen-znat-pro-geograficheskie-koordinaty/
ogr2ogr -f GeoJSON world.json ne_10m_admin_0_countries/ne_10m_admin_0_countries.shp
geo2topo -o topoworld.json --id-property SU_A3 world.json
https://confluence.hflabs.ru/pages/viewpage.action?pageId=204669104
https://stackoverflow.com/questions/55901/web-service-current-time-zone-for-a-city
http://momentjs.com/timezone/docs/
https://github.com/kevinroberts/city-timezones
https://www.html5rocks.com/ru/tutorials/canvas/performance/
https://www.d3-graph-gallery.com/

https://www.d3-graph-gallery.com/graph/line_basic.html
https://www.d3-graph-gallery.com/graph/connectedscatter_basic.html
