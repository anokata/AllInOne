https://habr.com/ru/post/186532/
https://github.com/csparpa/pyowm

Нужно отобразить сферу, с картой на ней, с возможностью вращать, приближать.
Пусть мы имеем набор точек в трёхмерном евклидовом пространстве, представляющих сферу и рисунок на ней.
Так же имеется камерa (плоскость проекции) На которую необходимо спроецировать двумерное изображение сферы.
Значит делаем так.
Будем проводить прямые, перпендикулярные плоскости проекции и проходящие через точки сферы - по одной точке
Пересечение таких прямых и плоскости проекции будет давать точку сферы. Необходимо хранить дистанцию до каждой точки.

https://github.com/topojson/topojson
GeoJSON
d3js
http://bl.ocks.org/KoGor/5994804
http://marcneuwirth.com/blog/2012/06/24/creating-the-earth-with-d3-js/
https://d3-wiki.readthedocs.io/zh_CN/master/Geo-Projections/
https://frontender.info/d3js-map-visualization/

https://github.com/SamHasler/sphere/blob/master/sphere.js
https://ru.wikipedia.org/wiki/Three.js
https://github.com/csparpa/pyowm


Как мы знаем, карта представляет из себя контуры, линии, границы государств, береговые линии и много другой геометрии. Для получения этих данных мы будем обращаться к shapefile — популярному формату геоданных. Shapefile позволяет хранить точки, линии, полигоны и другие объекты. Также может содержать информацию о параметрах типа температуры, названий, глубины и т.д. Hа самом деле, shapefile представляет из себя набор из трёх файлов: *.shp, *.shx и *.dbf. Важно, чтобы все три файла находились в одной директории.
https://www.naturalearthdata.com/downloads/
org2org (gdal)
sudo npm install -g topojson

Сначала нам нужно получить из shapefiles конечный TopoJSON-файл. Для этого нам понадобится сгенерировать промежуточный файл GeoJSON. На этапе генерации GeoJSON-файла мы получаем возможность отфильтровать из shapefiles данные, которые нам не нужны, и уменьшить в значениях число знаков после запятой, что важно для увеличения скорости рендеринга, да и просто сокращает размер файла примерно на 85%.
В конечном итоге процесс конвертации данных схематично выглядит так:
shapefiles ⟶ GeoJSON ⟶ TopoJSON
Нам нужно получить TopoJSON со странами мира

https://leafletjs.com/examples/geojson/
https://gist.github.com/kosamari/5bcb6ab8ef292732463b?short_path=f239869
https://bl.ocks.org/mbostock/4408297
https://www.dashingd3js.com/svg-paths-and-d3js

https://www.w3schools.com/howto/howto_js_autocomplete.asp
https://jqueryui.com/autocomplete/
https://on55.ru/articles/2
